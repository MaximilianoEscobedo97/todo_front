[{"C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\index.js":"1","C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\App.js":"2","C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\reportWebVitals.js":"3","C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\app\\todo\\index.js":"4","C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\services\\TodoApi.js":"5","C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\components\\table\\index.js":"6","C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\components\\modal\\index.js":"7","C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\constants\\Api.js":"8","C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\components\\sidebar\\index.js":"9"},{"size":561,"mtime":1611512450147,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1611512450139,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1611512450148,"results":"13","hashOfConfig":"11"},{"size":3754,"mtime":1611530188411,"results":"14","hashOfConfig":"11"},{"size":1267,"mtime":1611529820821,"results":"15","hashOfConfig":"11"},{"size":3331,"mtime":1611530115346,"results":"16","hashOfConfig":"11"},{"size":4981,"mtime":1611530259522,"results":"17","hashOfConfig":"11"},{"size":136,"mtime":1611512450146,"results":"18","hashOfConfig":"11"},{"size":5021,"mtime":1611528270951,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"b6cs1u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"40","usedDeprecatedRules":"22"},"C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\index.js",[],["41","42"],"C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\App.js",["43","44"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport {Todo} from \"./app/todo\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App-header\">\r\n      <BrowserRouter>\r\n      <Route\r\n        to={\"/\"}\r\n        component={Todo}\r\n      />\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\reportWebVitals.js",[],"C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\app\\todo\\index.js",["45","46","47","48","49","50","51"],"C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\services\\TodoApi.js",[],"C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\components\\table\\index.js",["52","53","54","55","56"],"C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\components\\modal\\index.js",["57"],"C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\constants\\Api.js",[],"C:\\Users\\Max\\Desktop\\addika\\todo_front\\src\\components\\sidebar\\index.js",["58","59","60","61"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { AiOutlineEdit } from \"react-icons/ai\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { show, updateTodoCompleted, deleteTodo } from \"../../services/TodoApi\"\r\nimport {CreateModal} from \"../modal\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: 400,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 230,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nexport function SwipeableTemporaryDrawer({ toggleSidebar, parent_state, parent_setState, id , setEditModal, setEditData}) {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n    handleShow: false,\r\n  });\r\n\r\n  const [todo, setTodo] = useState({\r\n    id: \"\",\r\n    title: \"0\",\r\n    name: \"\",\r\n    completed: 0,\r\n    description: \"\",\r\n    created: \"\",\r\n  })\r\n\r\n  const [completed, setCompleted] = useState('');\r\n  const handleChange = (event) => {\r\n    setCompleted(event.target.value);\r\n    handleUpdateCompleted();\r\n  };\r\n\r\n  const handleUpdateCompleted = async () => {\r\n    await updateTodoCompleted(todo.id);\r\n  }\r\n\r\n\r\n  const handleDelete = async () => {\r\n    await deleteTodo(todo.id);\r\n  }\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    if (!!open) {\r\n      setState({ ...state, [anchor]: true });\r\n    } else {\r\n      setState({ ...state, [anchor]: false });\r\n      parent_setState({ ...parent_state, toggleSidebar: false })\r\n    }\r\n  };\r\n\r\n  const handleEdit = () =>\r\n  {\r\n    setEditModal(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!!toggleSidebar) {\r\n      setState({ ...state, [\"right\"]: true });\r\n    } else {\r\n      setState({ ...state, [\"right\"]: false });\r\n      parent_setState({\r\n        ...parent_state,\r\n        toggleSidebar: false\r\n      })\r\n    }\r\n\r\n    if (!!id) getTodo();\r\n  }, [toggleSidebar])\r\n\r\n  const getTodo = async () => {\r\n    let response = await show(id);\r\n    let data = response.data.todo;\r\n    setTodo({\r\n      ...todo,\r\n      id: data.id,\r\n      name: data.name,\r\n      title: data.title,\r\n      completed: data.completed,\r\n      created: data.created,\r\n      description: data.description\r\n    })\r\n    setCompleted(!!data.completed);\r\n\r\n    setEditData(data);\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <div className=\"container-fluid p-5 \">\r\n        <h2 className=\"font-weight-bold mb-5\">{todo.title}</h2>\r\n\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">Completed</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={completed}\r\n            onChange={handleChange}\r\n            label=\"Completed\"\r\n            autoWidth={true}\r\n            fullWidth\r\n          >\r\n            <MenuItem value={true}>Status: Success</MenuItem>\r\n            <MenuItem value={false}>Status: Pending</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <div className=\"mt-5\">\r\n          <h6 className=\"font-weight-bold\">Created</h6>\r\n          <p>{todo.created}</p>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <h6 className=\"font-weight-bold\">Description</h6>\r\n          <p>{todo.description}</p>\r\n        </div>\r\n\r\n        <div className=\"d-flex align-items-end\" >\r\n          <Button onClick={handleEdit} \r\n            variant=\"contained\" \r\n            className=\"text-primary mr-5\"\r\n          > \r\n            <AiOutlineEdit /> Edit\r\n          </Button>\r\n          <Button onClick={handleDelete}\r\n            variant=\"contained\"\r\n            className=\"text-danger mr-3\"\r\n          >\r\n            <RiDeleteBin6Line /> Delete\r\n         </Button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment >\r\n        <SwipeableDrawer\r\n          anchor={\"right\"}\r\n          open={state[\"right\"]}\r\n          onClose={toggleDrawer(\"right\", false)}\r\n          onOpen={toggleDrawer(\"right\", true)}\r\n        >\r\n          {list(\"right\")}\r\n        </SwipeableDrawer>\r\n        \r\n      </React.Fragment>\r\n\r\n    </div>\r\n  );\r\n}",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":3,"column":17,"nodeType":"68","messageId":"69","endLine":3,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":20,"column":16,"nodeType":"73","endLine":29,"endColumn":6},{"ruleId":"71","severity":1,"message":"74","line":29,"column":8,"nodeType":"75","endLine":29,"endColumn":21,"suggestions":"76"},{"ruleId":"71","severity":1,"message":"77","line":32,"column":8,"nodeType":"75","endLine":32,"endColumn":10,"suggestions":"78"},{"ruleId":"71","severity":1,"message":"72","line":34,"column":15,"nodeType":"73","endLine":43,"endColumn":6},{"ruleId":"71","severity":1,"message":"74","line":43,"column":7,"nodeType":"75","endLine":43,"endColumn":25,"suggestions":"79"},{"ruleId":"71","severity":1,"message":"80","line":60,"column":8,"nodeType":"75","endLine":60,"endColumn":23,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":97,"column":33,"nodeType":"84","endLine":97,"endColumn":102},{"ruleId":"66","severity":1,"message":"85","line":9,"column":8,"nodeType":"68","messageId":"69","endLine":9,"endColumn":23},{"ruleId":"66","severity":1,"message":"86","line":11,"column":8,"nodeType":"68","messageId":"69","endLine":11,"endColumn":13},{"ruleId":"66","severity":1,"message":"87","line":25,"column":7,"nodeType":"68","messageId":"69","endLine":25,"endColumn":11},{"ruleId":"71","severity":1,"message":"88","line":52,"column":5,"nodeType":"75","endLine":52,"endColumn":23,"suggestions":"89"},{"ruleId":"66","severity":1,"message":"90","line":54,"column":9,"nodeType":"68","messageId":"69","endLine":54,"endColumn":25},{"ruleId":"71","severity":1,"message":"91","line":56,"column":8,"nodeType":"75","endLine":56,"endColumn":10,"suggestions":"92"},{"ruleId":"66","severity":1,"message":"93","line":13,"column":9,"nodeType":"68","messageId":"69","endLine":13,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":84,"column":28,"nodeType":"96","messageId":"97","endLine":84,"endColumn":43,"fix":"98"},{"ruleId":"94","severity":1,"message":"95","line":86,"column":28,"nodeType":"96","messageId":"97","endLine":86,"endColumn":44,"fix":"99"},{"ruleId":"71","severity":1,"message":"100","line":94,"column":6,"nodeType":"75","endLine":94,"endColumn":21,"suggestions":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'addFilter' and 'getRows'. Either include them or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'getRows'. Either include it or remove the dependency array.",["105"],["106"],"React Hook useEffect has a missing dependency: 'addFilter'. Either include it or remove the dependency array.",["107"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'SwipeableDrawer' is defined but never used.","'Paper' is defined but never used.","'rows' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["108"],"'setToggleSidebar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.data' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["109"],"'CreateModal' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"right\"] found.","Property","unnecessarilyComputedProperty",{"range":"110","text":"111"},{"range":"112","text":"111"},"React Hook useEffect has missing dependencies: 'getTodo', 'id', 'parent_setState', 'parent_state', and 'state'. Either include them or remove the dependency array. If 'parent_setState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},[2259,2268],"\"right\"",[2321,2330],{"desc":"126","fix":"127"},"Update the dependencies array to be: [addFilter, getRows, tableUpdate]",{"range":"128","text":"129"},"Update the dependencies array to be: [getRows]",{"range":"130","text":"131"},"Update the dependencies array to be: [addFilter, getRows, state.handleShow]",{"range":"132","text":"133"},"Update the dependencies array to be: [addFilter, state.created]",{"range":"134","text":"135"},"Update the dependencies array to be: [props, state.handleShow]",{"range":"136","text":"137"},"Update the dependencies array to be: [props.data, state]",{"range":"138","text":"139"},"Update the dependencies array to be: [getTodo, id, parent_setState, parent_state, state, toggleSidebar]",{"range":"140","text":"141"},[789,802],"[addFilter, getRows, tableUpdate]",[855,857],"[getRows]",[1026,1044],"[addFilter, getRows, state.handleShow]",[1497,1512],"[addFilter, state.created]",[1655,1673],"[props, state.handleShow]",[1686,1688],"[props.data, state]",[2474,2489],"[getTodo, id, parent_setState, parent_state, state, toggleSidebar]"]